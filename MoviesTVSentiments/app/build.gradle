apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs"
apply plugin: "jacoco"

jacoco {
    toolVersion = "$jacocoVersion"
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.google.moviestvsentiments"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.google.moviestvsentiments.HiltTestRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    sourceSets {
        main {
            res {
                srcDirs 'src/main/res', 'src/main/res/layouts/signin', 'src/main/res/layouts/addAccount', 'src/main/res/layouts/disliked', 'src/main/res/layouts/liked', 'src/main/res/layouts/home', 'src/main/res/layouts/navigation', 'src/main/res/layouts/assetList', 'src/main/res/layouts/details'
            }
        }
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }

    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "skipped", "passed", "failed"
        showStandardStreams true
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def mainSrc = "$project.projectDir/src/main/java"
    sourceDirectories.setFrom files([mainSrc])
    classDirectories.setFrom files([mainSrc])
    executionData.setFrom fileTree(dir: mainSrc, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
    ])
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Auto value and parcelable
    api "com.google.auto.value:auto-value-annotations:${autoValueVersion}"
    annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.7'

    // Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    annotationProcessor "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$rootProject.hiltVersion"
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"

    // Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$rootProject.archLifecycleVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:4.11.0"

    // Retrofit and Jackson
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.1'

    // Work manager
    implementation 'androidx.work:work-runtime:2.3.4'
    implementation 'androidx.hilt:hilt-work:1.0.0-alpha01'
    annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0-alpha01'
    androidTestImplementation 'androidx.work:work-testing:2.3.4'

    // Testing
    androidTestImplementation "androidx.test:rules:1.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.ext:truth:1.0.0'
    androidTestImplementation "com.google.truth:truth:$rootProject.truthVersion"
    testImplementation "org.mockito:mockito-core:1.10.19"
    testImplementation "com.google.truth:truth:$rootProject.truthVersion"
    testImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "pl.pragmatists:JUnitParams:1.1.1"
    testImplementation "pl.pragmatists:JUnitParams:1.1.1"

    // UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}